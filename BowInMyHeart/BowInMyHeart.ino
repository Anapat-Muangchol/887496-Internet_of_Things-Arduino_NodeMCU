#include <Arduino.h>
#include <U8g2lib.h>

#ifdef U8X8_HAVE_HW_SPI
#include <SPI.h>
#endif
#ifdef U8X8_HAVE_HW_I2C
#include <Wire.h>
#endif

U8G2_SSD1306_128X64_NONAME_1_SW_I2C u8g2(U8G2_R0, /* clock=*/ D1, /* data=*/ D2, /* reset=*/ U8X8_PIN_NONE);

#define bow_width 128
#define bow_height 64
static const unsigned char bow_bits[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x07, 0x00, 0xE0, 
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xE0, 0x3F, 0x00, 0xFC, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0x00, 0xFF, 0x0F, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0xF8, 0xBD, 0x1F, 
  0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x70, 0xE0, 0xFF, 0x07, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x70, 0x80, 0xFF, 0x01, 0x0E, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x80, 0xE7, 0x01, 
  0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x70, 0x00, 0xC3, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xC3, 0x00, 0x0E, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x80, 0xE7, 0x01, 
  0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x70, 0xC0, 0xFF, 0x03, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0, 0xFF, 0x0F, 0x0F, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x3F, 0xFF, 0xFC, 
  0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xE0, 0x9F, 0xE7, 0xF9, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xF8, 0x81, 0xE7, 0x81, 0x1F, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0xC0, 0x81, 0x03, 
  0x3C, 0x00, 0x00, 0xE0, 0x03, 0xF0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x1E, 0xE0, 0x00, 0x07, 0x78, 0x00, 0x00, 0xFC, 0x0F, 0xFC, 0x0F, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x1F, 0x70, 0x00, 0x0E, 0xF8, 0x00, 0x00, 0xFE, 
  0x1F, 0xFE, 0x1F, 0x00, 0x00, 0x80, 0x01, 0x00, 0x7C, 0x78, 0x00, 0x1E, 
  0x3E, 0x00, 0x00, 0xFF, 0x3F, 0xFF, 0x3F, 0x00, 0x00, 0xC0, 0xFF, 0x03, 
  0xF8, 0x3C, 0x00, 0x3C, 0x1F, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 
  0x00, 0xE0, 0xFF, 0x07, 0xE0, 0x1E, 0x00, 0x78, 0x07, 0x00, 0xC0, 0x3F, 
  0xF8, 0x07, 0xFF, 0x00, 0x00, 0xF0, 0xFF, 0x1F, 0xC0, 0x0F, 0x00, 0xF0, 
  0x03, 0x00, 0xC0, 0x1F, 0xE0, 0x01, 0xFE, 0x00, 0x00, 0xF0, 0x01, 0x1E, 
  0xC0, 0x07, 0x00, 0xE0, 0x03, 0x00, 0xC0, 0x0F, 0xC0, 0x00, 0xFC, 0x00, 
  0x00, 0xFC, 0x01, 0x3C, 0xC0, 0x03, 0x00, 0xC0, 0x03, 0x00, 0xC0, 0x0F, 
  0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x01, 0x38, 0x80, 0x01, 0x00, 0x80, 
  0x01, 0x00, 0xC0, 0x07, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xDC, 0x01, 0x38, 
  0x80, 0x00, 0x00, 0x00, 0x01, 0x00, 0xC0, 0x07, 0x00, 0x00, 0xF8, 0x00, 
  0x00, 0xCC, 0x01, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x07, 
  0x00, 0x00, 0xF8, 0x00, 0x00, 0xC0, 0x01, 0x1C, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x80, 0x07, 0x00, 0x00, 0x78, 0x00, 0x00, 0xC0, 0x01, 0x1F, 
  0x00, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x80, 0x0F, 0x00, 0x00, 0x7C, 0x00, 
  0x00, 0xC0, 0xC1, 0x07, 0x00, 0xFE, 0x03, 0x0C, 0x00, 0x38, 0x80, 0x0F, 
  0x00, 0x00, 0x7C, 0x00, 0x00, 0xC0, 0xC1, 0x07, 0x00, 0xFF, 0x07, 0x0C, 
  0x00, 0x38, 0x00, 0x0F, 0x00, 0x00, 0x3C, 0x00, 0x00, 0xC0, 0xF9, 0x01, 
  0x80, 0xFF, 0x0F, 0x0E, 0x00, 0x38, 0x00, 0x1F, 0x00, 0x00, 0x3E, 0x00, 
  0x00, 0xC0, 0xFD, 0x07, 0xC0, 0x83, 0x1F, 0x0E, 0x18, 0x38, 0x00, 0x1E, 
  0x00, 0x00, 0x1E, 0x00, 0x00, 0xC0, 0xFF, 0x3F, 0xE0, 0x01, 0x3F, 0x0E, 
  0x3C, 0x38, 0x00, 0x7C, 0x00, 0x80, 0x0F, 0x00, 0x00, 0xC0, 0x1F, 0xFF, 
  0xF0, 0x00, 0x3C, 0x0E, 0x3C, 0x3C, 0x00, 0x78, 0x00, 0x80, 0x07, 0x00, 
  0x00, 0xC0, 0x03, 0xF8, 0xF0, 0x00, 0x38, 0x0E, 0x3C, 0x3C, 0x00, 0xF0, 
  0x00, 0xC0, 0x03, 0x00, 0x00, 0xE0, 0x00, 0xE0, 0x39, 0x00, 0x78, 0x0E, 
  0x3C, 0x1C, 0x00, 0xE0, 0x03, 0xF0, 0x01, 0x00, 0x00, 0xE0, 0x00, 0xC0, 
  0x39, 0x00, 0x70, 0x0E, 0x3E, 0x1C, 0x00, 0xC0, 0x07, 0xF8, 0x00, 0x00, 
  0x00, 0xE0, 0x00, 0xC0, 0x39, 0x00, 0x70, 0x1E, 0x3E, 0x1C, 0x00, 0x80, 
  0x0F, 0x7C, 0x00, 0x00, 0x00, 0xE0, 0x00, 0xE0, 0x39, 0x00, 0x70, 0x1C, 
  0x3E, 0x1C, 0x00, 0x00, 0x1E, 0x1E, 0x00, 0x00, 0x00, 0xE0, 0x00, 0xE0, 
  0x38, 0x00, 0x70, 0x1C, 0x7F, 0x1E, 0x00, 0x00, 0x3E, 0x1F, 0x00, 0x00, 
  0x00, 0xE2, 0x00, 0xF0, 0x38, 0x00, 0x70, 0x1C, 0x7F, 0x0E, 0x00, 0x00, 
  0x38, 0x07, 0x00, 0x00, 0x00, 0xE3, 0x00, 0x78, 0x78, 0x00, 0x78, 0x3C, 
  0x77, 0x0F, 0x00, 0x00, 0xF0, 0x03, 0x00, 0x00, 0x80, 0xE7, 0x00, 0x3C, 
  0xF0, 0x00, 0x38, 0xB8, 0x77, 0x07, 0x00, 0x00, 0xE0, 0x01, 0x00, 0x00, 
  0x00, 0x7F, 0x00, 0x1F, 0xF0, 0x07, 0x1E, 0xF8, 0xE3, 0x07, 0x00, 0x00, 
  0xE0, 0x01, 0x00, 0x00, 0x00, 0x7F, 0x80, 0x07, 0xC0, 0xFF, 0x0F, 0xF8, 
  0xE3, 0x03, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFC, 0x03, 
  0x00, 0xFF, 0x07, 0xE0, 0x81, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xF8, 0xFF, 0x01, 0x00, 0xF8, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x0F, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, };


void setup(void) {
  u8g2.begin();  
}

int x = 128;

void loop(void) {
  
  u8g2.firstPage();
  do {
    u8g2.setFont(u8g2_font_ncenB14_tr);
    u8g2.drawXBM(x,0, bow_width, bow_height, bow_bits);
  } while ( u8g2.nextPage() );
  
  x-=1;
  if(x<=-128)x = 128;
  
  //delay(1000);
  
}

